{"{\"assumptions\":{},\"sourceRoot\":\"/Users/smitapatil/Documents/Project/DEMO-TEST/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/smitapatil/Documents/Project/DEMO-TEST\",\"filename\":\"/Users/smitapatil/Documents/Project/DEMO-TEST/wdio.conf.js\",\"targets\":{\"android\":\"4.4.3\",\"chrome\":\"103.0.0\",\"edge\":\"110.0.0\",\"firefox\":\"110.0.0\",\"ios\":\"12.2.0\",\"opera\":\"95.0.0\",\"safari\":\"14.1.0\",\"samsung\":\"19.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/smitapatil/Documents/Project/DEMO-TEST\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // The path of the spec files will be resolved relative from the directory of\n  // of the config file unless it's absolute.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    browserName: 'chrome'\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  // baseUrl: 'http://localhost:8080',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialize specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context, hookName) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n  /**\n  * Hook that gets executed before a WebdriverIO assertion happens.\n  * @param {object} params information about the assertion to be executed\n  */\n  // beforeAssertion: function(params) {\n  // }\n  /**\n  * Hook that gets executed after a WebdriverIO assertion happened.\n  * @param {object} params information about the assertion that was executed, including its results\n  */\n  // afterAssertion: function(params) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"/Users/smitapatil/Documents/Project/DEMO-TEST/","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // The path of the spec files will be resolved relative from the directory of\n    // of the config file unless it's absolute.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        browserName: 'chrome'\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    // baseUrl: 'http://localhost:8080',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    \n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialize specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context, hookName) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n    /**\n    * Hook that gets executed before a WebdriverIO assertion happens.\n    * @param {object} params information about the assertion to be executed\n    */\n    // beforeAssertion: function(params) {\n    // }\n    /**\n    * Hook that gets executed after a WebdriverIO assertion happened.\n    * @param {object} params information about the assertion that was executed, including its results\n    */\n    // afterAssertion: function(params) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACXC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAEnB;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1721844819135},"{\"assumptions\":{},\"sourceRoot\":\"/Users/smitapatil/Documents/Project/DEMO-TEST/test/specs/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/smitapatil/Documents/Project/DEMO-TEST\",\"filename\":\"/Users/smitapatil/Documents/Project/DEMO-TEST/test/specs/test.e2e.js\",\"targets\":{\"android\":\"4.4.3\",\"chrome\":\"103.0.0\",\"edge\":\"110.0.0\",\"firefox\":\"110.0.0\",\"ios\":\"12.2.0\",\"opera\":\"95.0.0\",\"safari\":\"14.1.0\",\"samsung\":\"19.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/smitapatil/Documents/Project/DEMO-TEST\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:test":{"value":{"code":"const assert = require('assert');\nconst RecentlyPlayedStore = require('../pageobjects/demo.page');\ndescribe('RecentlyPlayedStore', function () {\n  let store;\n  beforeEach(function () {\n    store = new RecentlyPlayedStore(3);\n  });\n  it('should add and retrieve recently played songs correctly', async () => {\n    await store.addSong('user1', 's1');\n    await store.addSong('user1', 's2');\n    await store.addSong('user1', 's3');\n    let result = await store.getRecentlyPlayed('user1');\n    console.log('Output:', result);\n    store.addSong('user1', 's4');\n    result = store.getRecentlyPlayed('user1');\n    console.log('Output:', result);\n    await store.addSong('user1', 's2');\n    result = await store.getRecentlyPlayed('user1');\n    console.log('Output:', result);\n    await store.addSong('user1', 's1');\n    result = await store.getRecentlyPlayed('user1');\n    console.log('Output:', result);\n  });\n  it('should handle multiple users', async () => {\n    await store.addSong('user1', 's1');\n    await store.addSong('user2', 's2');\n    await store.addSong('user1', 's3');\n    await store.addSong('user2', 's4');\n    let result1 = await store.getRecentlyPlayed('user1');\n    let result2 = await store.getRecentlyPlayed('user2');\n    console.log('Output for user1:', result1);\n    console.log('Output for user2:', result2);\n  });\n  it('should return an empty list if no songs have been played for a user', async () => {\n    let result = await store.getRecentlyPlayed('user1');\n    console.log('Output:', result);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiUmVjZW50bHlQbGF5ZWRTdG9yZSIsImRlc2NyaWJlIiwic3RvcmUiLCJiZWZvcmVFYWNoIiwiaXQiLCJhZGRTb25nIiwicmVzdWx0IiwiZ2V0UmVjZW50bHlQbGF5ZWQiLCJjb25zb2xlIiwibG9nIiwicmVzdWx0MSIsInJlc3VsdDIiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9zbWl0YXBhdGlsL0RvY3VtZW50cy9Qcm9qZWN0L0RFTU8tVEVTVC90ZXN0L3NwZWNzLyIsInNvdXJjZXMiOlsidGVzdC5lMmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7XG5jb25zdCBSZWNlbnRseVBsYXllZFN0b3JlID0gcmVxdWlyZSgnLi4vcGFnZW9iamVjdHMvZGVtby5wYWdlJyk7XG5cbmRlc2NyaWJlKCdSZWNlbnRseVBsYXllZFN0b3JlJywgZnVuY3Rpb24gKCkge1xuICAgIGxldCBzdG9yZTtcblxuICAgIGJlZm9yZUVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICBzdG9yZSA9IG5ldyBSZWNlbnRseVBsYXllZFN0b3JlKDMpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBhZGQgYW5kIHJldHJpZXZlIHJlY2VudGx5IHBsYXllZCBzb25ncyBjb3JyZWN0bHknLCBhc3luYyAoKT0+IHtcbiAgICAgICAgYXdhaXQgc3RvcmUuYWRkU29uZygndXNlcjEnLCAnczEnKTtcbiAgICAgICAgYXdhaXQgc3RvcmUuYWRkU29uZygndXNlcjEnLCAnczInKTtcbiAgICAgICAgYXdhaXQgc3RvcmUuYWRkU29uZygndXNlcjEnLCAnczMnKTtcbiAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IHN0b3JlLmdldFJlY2VudGx5UGxheWVkKCd1c2VyMScpO1xuICAgICAgICBjb25zb2xlLmxvZygnT3V0cHV0OicsIHJlc3VsdCk7XG5cbiAgICAgICAgc3RvcmUuYWRkU29uZygndXNlcjEnLCAnczQnKTtcbiAgICAgICAgcmVzdWx0ID0gc3RvcmUuZ2V0UmVjZW50bHlQbGF5ZWQoJ3VzZXIxJyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdPdXRwdXQ6JywgcmVzdWx0KTtcblxuICAgICAgICBhd2FpdCBzdG9yZS5hZGRTb25nKCd1c2VyMScsICdzMicpO1xuICAgICAgICByZXN1bHQgPSBhd2FpdCBzdG9yZS5nZXRSZWNlbnRseVBsYXllZCgndXNlcjEnKTtcbiAgICAgICAgY29uc29sZS5sb2coJ091dHB1dDonLCByZXN1bHQpO1xuXG4gICAgICAgIGF3YWl0IHN0b3JlLmFkZFNvbmcoJ3VzZXIxJywgJ3MxJyk7XG4gICAgICAgIHJlc3VsdCA9IGF3YWl0IHN0b3JlLmdldFJlY2VudGx5UGxheWVkKCd1c2VyMScpO1xuICAgICAgICBjb25zb2xlLmxvZygnT3V0cHV0OicsIHJlc3VsdCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGhhbmRsZSBtdWx0aXBsZSB1c2VycycsIGFzeW5jICgpPT4ge1xuICAgICAgICBhd2FpdCBzdG9yZS5hZGRTb25nKCd1c2VyMScsICdzMScpO1xuICAgICAgICBhd2FpdCBzdG9yZS5hZGRTb25nKCd1c2VyMicsICdzMicpO1xuICAgICAgICBhd2FpdCBzdG9yZS5hZGRTb25nKCd1c2VyMScsICdzMycpO1xuICAgICAgICBhd2FpdCBzdG9yZS5hZGRTb25nKCd1c2VyMicsICdzNCcpO1xuICAgICAgICBsZXQgcmVzdWx0MSA9IGF3YWl0IHN0b3JlLmdldFJlY2VudGx5UGxheWVkKCd1c2VyMScpO1xuICAgICAgICBsZXQgcmVzdWx0MiA9IGF3YWl0IHN0b3JlLmdldFJlY2VudGx5UGxheWVkKCd1c2VyMicpO1xuICAgICAgICBjb25zb2xlLmxvZygnT3V0cHV0IGZvciB1c2VyMTonLCByZXN1bHQxKTtcbiAgICAgICAgY29uc29sZS5sb2coJ091dHB1dCBmb3IgdXNlcjI6JywgcmVzdWx0Mik7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHJldHVybiBhbiBlbXB0eSBsaXN0IGlmIG5vIHNvbmdzIGhhdmUgYmVlbiBwbGF5ZWQgZm9yIGEgdXNlcicsIGFzeW5jICgpPT4ge1xuICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgc3RvcmUuZ2V0UmVjZW50bHlQbGF5ZWQoJ3VzZXIxJyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdPdXRwdXQ6JywgcmVzdWx0KTtcbiAgICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFRLENBQUM7QUFDaEMsTUFBTUMsbUJBQW1CLEdBQUdELE9BQU8sQ0FBQywwQkFBMEIsQ0FBQztBQUUvREUsUUFBUSxDQUFDLHFCQUFxQixFQUFFLFlBQVk7RUFDeEMsSUFBSUMsS0FBSztFQUVUQyxVQUFVLENBQUMsWUFBWTtJQUNuQkQsS0FBSyxHQUFHLElBQUlGLG1CQUFtQixDQUFDLENBQUMsQ0FBQztFQUN0QyxDQUFDLENBQUM7RUFFRkksRUFBRSxDQUFDLHlEQUF5RCxFQUFFLFlBQVc7SUFDckUsTUFBTUYsS0FBSyxDQUFDRyxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQztJQUNsQyxNQUFNSCxLQUFLLENBQUNHLE9BQU8sQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQ2xDLE1BQU1ILEtBQUssQ0FBQ0csT0FBTyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUM7SUFDbEMsSUFBSUMsTUFBTSxHQUFHLE1BQU1KLEtBQUssQ0FBQ0ssaUJBQWlCLENBQUMsT0FBTyxDQUFDO0lBQ25EQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxTQUFTLEVBQUVILE1BQU0sQ0FBQztJQUU5QkosS0FBSyxDQUFDRyxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQztJQUM1QkMsTUFBTSxHQUFHSixLQUFLLENBQUNLLGlCQUFpQixDQUFDLE9BQU8sQ0FBQztJQUN6Q0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsU0FBUyxFQUFFSCxNQUFNLENBQUM7SUFFOUIsTUFBTUosS0FBSyxDQUFDRyxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQztJQUNsQ0MsTUFBTSxHQUFHLE1BQU1KLEtBQUssQ0FBQ0ssaUJBQWlCLENBQUMsT0FBTyxDQUFDO0lBQy9DQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxTQUFTLEVBQUVILE1BQU0sQ0FBQztJQUU5QixNQUFNSixLQUFLLENBQUNHLE9BQU8sQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQ2xDQyxNQUFNLEdBQUcsTUFBTUosS0FBSyxDQUFDSyxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7SUFDL0NDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFNBQVMsRUFBRUgsTUFBTSxDQUFDO0VBQ2xDLENBQUMsQ0FBQztFQUVGRixFQUFFLENBQUMsOEJBQThCLEVBQUUsWUFBVztJQUMxQyxNQUFNRixLQUFLLENBQUNHLE9BQU8sQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQ2xDLE1BQU1ILEtBQUssQ0FBQ0csT0FBTyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUM7SUFDbEMsTUFBTUgsS0FBSyxDQUFDRyxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQztJQUNsQyxNQUFNSCxLQUFLLENBQUNHLE9BQU8sQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQ2xDLElBQUlLLE9BQU8sR0FBRyxNQUFNUixLQUFLLENBQUNLLGlCQUFpQixDQUFDLE9BQU8sQ0FBQztJQUNwRCxJQUFJSSxPQUFPLEdBQUcsTUFBTVQsS0FBSyxDQUFDSyxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7SUFDcERDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQixFQUFFQyxPQUFPLENBQUM7SUFDekNGLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQixFQUFFRSxPQUFPLENBQUM7RUFDN0MsQ0FBQyxDQUFDO0VBRUZQLEVBQUUsQ0FBQyxxRUFBcUUsRUFBRSxZQUFXO0lBQ2pGLElBQUlFLE1BQU0sR0FBRyxNQUFNSixLQUFLLENBQUNLLGlCQUFpQixDQUFDLE9BQU8sQ0FBQztJQUNuREMsT0FBTyxDQUFDQyxHQUFHLENBQUMsU0FBUyxFQUFFSCxNQUFNLENBQUM7RUFDbEMsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["assert","require","RecentlyPlayedStore","describe","store","beforeEach","it","addSong","result","getRecentlyPlayed","console","log","result1","result2"],"sourceRoot":"/Users/smitapatil/Documents/Project/DEMO-TEST/test/specs/","sources":["test.e2e.js"],"sourcesContent":["const assert = require('assert');\nconst RecentlyPlayedStore = require('../pageobjects/demo.page');\n\ndescribe('RecentlyPlayedStore', function () {\n    let store;\n\n    beforeEach(function () {\n        store = new RecentlyPlayedStore(3);\n    });\n\n    it('should add and retrieve recently played songs correctly', async ()=> {\n        await store.addSong('user1', 's1');\n        await store.addSong('user1', 's2');\n        await store.addSong('user1', 's3');\n        let result = await store.getRecentlyPlayed('user1');\n        console.log('Output:', result);\n\n        store.addSong('user1', 's4');\n        result = store.getRecentlyPlayed('user1');\n        console.log('Output:', result);\n\n        await store.addSong('user1', 's2');\n        result = await store.getRecentlyPlayed('user1');\n        console.log('Output:', result);\n\n        await store.addSong('user1', 's1');\n        result = await store.getRecentlyPlayed('user1');\n        console.log('Output:', result);\n    });\n\n    it('should handle multiple users', async ()=> {\n        await store.addSong('user1', 's1');\n        await store.addSong('user2', 's2');\n        await store.addSong('user1', 's3');\n        await store.addSong('user2', 's4');\n        let result1 = await store.getRecentlyPlayed('user1');\n        let result2 = await store.getRecentlyPlayed('user2');\n        console.log('Output for user1:', result1);\n        console.log('Output for user2:', result2);\n    });\n\n    it('should return an empty list if no songs have been played for a user', async ()=> {\n        let result = await store.getRecentlyPlayed('user1');\n        console.log('Output:', result);\n    });\n});\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAE/DE,QAAQ,CAAC,qBAAqB,EAAE,YAAY;EACxC,IAAIC,KAAK;EAETC,UAAU,CAAC,YAAY;IACnBD,KAAK,GAAG,IAAIF,mBAAmB,CAAC,CAAC,CAAC;EACtC,CAAC,CAAC;EAEFI,EAAE,CAAC,yDAAyD,EAAE,YAAW;IACrE,MAAMF,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,MAAMH,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,MAAMH,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,IAAIC,MAAM,GAAG,MAAMJ,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IACnDC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;IAE9BJ,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAC5BC,MAAM,GAAGJ,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IACzCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;IAE9B,MAAMJ,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClCC,MAAM,GAAG,MAAMJ,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;IAE9B,MAAMJ,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClCC,MAAM,GAAG,MAAMJ,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;EAClC,CAAC,CAAC;EAEFF,EAAE,CAAC,8BAA8B,EAAE,YAAW;IAC1C,MAAMF,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,MAAMH,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,MAAMH,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,MAAMH,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,IAAIK,OAAO,GAAG,MAAMR,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IACpD,IAAII,OAAO,GAAG,MAAMT,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IACpDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,OAAO,CAAC;IACzCF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,OAAO,CAAC;EAC7C,CAAC,CAAC;EAEFP,EAAE,CAAC,qEAAqE,EAAE,YAAW;IACjF,IAAIE,MAAM,GAAG,MAAMJ,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IACnDC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;EAClC,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1721846490929},"{\"assumptions\":{},\"sourceRoot\":\"/Users/smitapatil/Documents/Project/DEMO-TEST/test/pageobjects/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/smitapatil/Documents/Project/DEMO-TEST\",\"filename\":\"/Users/smitapatil/Documents/Project/DEMO-TEST/test/pageobjects/demo.page.js\",\"targets\":{\"android\":\"4.4.3\",\"chrome\":\"103.0.0\",\"edge\":\"110.0.0\",\"firefox\":\"110.0.0\",\"ios\":\"12.2.0\",\"opera\":\"95.0.0\",\"safari\":\"14.1.0\",\"samsung\":\"19.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/smitapatil/Documents/Project/DEMO-TEST\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:test":{"value":{"code":"const Page = require('./page');\nclass RecentlyPlayedStore {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.store = {};\n  }\n  addSong(user, song) {\n    if (!this.store[user]) {\n      this.store[user] = [];\n    }\n    const songIndex = this.store[user].indexOf(song);\n    if (songIndex !== -1) {\n      this.store[user].splice(songIndex, 1);\n    }\n    if (this.store[user].length === this.capacity) {\n      this.store[user].shift();\n    }\n    this.store[user].push(song);\n  }\n  getRecentlyPlayed(user) {\n    return this.store[user] || [];\n  }\n}\nmodule.exports = RecentlyPlayedStore;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQYWdlIiwicmVxdWlyZSIsIlJlY2VudGx5UGxheWVkU3RvcmUiLCJjb25zdHJ1Y3RvciIsImNhcGFjaXR5Iiwic3RvcmUiLCJhZGRTb25nIiwidXNlciIsInNvbmciLCJzb25nSW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwibGVuZ3RoIiwic2hpZnQiLCJwdXNoIiwiZ2V0UmVjZW50bHlQbGF5ZWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvc21pdGFwYXRpbC9Eb2N1bWVudHMvUHJvamVjdC9ERU1PLVRFU1QvdGVzdC9wYWdlb2JqZWN0cy8iLCJzb3VyY2VzIjpbImRlbW8ucGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQYWdlID0gcmVxdWlyZSgnLi9wYWdlJyk7XG5cbmNsYXNzIFJlY2VudGx5UGxheWVkU3RvcmUge1xuICAgIGNvbnN0cnVjdG9yKGNhcGFjaXR5KSB7XG4gICAgICAgIHRoaXMuY2FwYWNpdHkgPSBjYXBhY2l0eTtcbiAgICAgICAgdGhpcy5zdG9yZSA9IHt9O1xuICAgIH1cblxuICAgIGFkZFNvbmcodXNlciwgc29uZykge1xuICAgICAgICBpZiAoIXRoaXMuc3RvcmVbdXNlcl0pIHtcbiAgICAgICAgICAgIHRoaXMuc3RvcmVbdXNlcl0gPSBbXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHNvbmdJbmRleCA9IHRoaXMuc3RvcmVbdXNlcl0uaW5kZXhPZihzb25nKTtcbiAgICAgICAgaWYgKHNvbmdJbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgIHRoaXMuc3RvcmVbdXNlcl0uc3BsaWNlKHNvbmdJbmRleCwgMSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5zdG9yZVt1c2VyXS5sZW5ndGggPT09IHRoaXMuY2FwYWNpdHkpIHtcbiAgICAgICAgICAgIHRoaXMuc3RvcmVbdXNlcl0uc2hpZnQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc3RvcmVbdXNlcl0ucHVzaChzb25nKTtcbiAgICB9XG5cbiAgICBnZXRSZWNlbnRseVBsYXllZCh1c2VyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0b3JlW3VzZXJdIHx8IFtdO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSZWNlbnRseVBsYXllZFN0b3JlOyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsUUFBUSxDQUFDO0FBRTlCLE1BQU1DLG1CQUFtQixDQUFDO0VBQ3RCQyxXQUFXQSxDQUFDQyxRQUFRLEVBQUU7SUFDbEIsSUFBSSxDQUFDQSxRQUFRLEdBQUdBLFFBQVE7SUFDeEIsSUFBSSxDQUFDQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0VBQ25CO0VBRUFDLE9BQU9BLENBQUNDLElBQUksRUFBRUMsSUFBSSxFQUFFO0lBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUNILEtBQUssQ0FBQ0UsSUFBSSxDQUFDLEVBQUU7TUFDbkIsSUFBSSxDQUFDRixLQUFLLENBQUNFLElBQUksQ0FBQyxHQUFHLEVBQUU7SUFDekI7SUFFQSxNQUFNRSxTQUFTLEdBQUcsSUFBSSxDQUFDSixLQUFLLENBQUNFLElBQUksQ0FBQyxDQUFDRyxPQUFPLENBQUNGLElBQUksQ0FBQztJQUNoRCxJQUFJQyxTQUFTLEtBQUssQ0FBQyxDQUFDLEVBQUU7TUFDbEIsSUFBSSxDQUFDSixLQUFLLENBQUNFLElBQUksQ0FBQyxDQUFDSSxNQUFNLENBQUNGLFNBQVMsRUFBRSxDQUFDLENBQUM7SUFDekM7SUFFQSxJQUFJLElBQUksQ0FBQ0osS0FBSyxDQUFDRSxJQUFJLENBQUMsQ0FBQ0ssTUFBTSxLQUFLLElBQUksQ0FBQ1IsUUFBUSxFQUFFO01BQzNDLElBQUksQ0FBQ0MsS0FBSyxDQUFDRSxJQUFJLENBQUMsQ0FBQ00sS0FBSyxFQUFFO0lBQzVCO0lBRUEsSUFBSSxDQUFDUixLQUFLLENBQUNFLElBQUksQ0FBQyxDQUFDTyxJQUFJLENBQUNOLElBQUksQ0FBQztFQUMvQjtFQUVBTyxpQkFBaUJBLENBQUNSLElBQUksRUFBRTtJQUNwQixPQUFPLElBQUksQ0FBQ0YsS0FBSyxDQUFDRSxJQUFJLENBQUMsSUFBSSxFQUFFO0VBQ2pDO0FBQ0o7QUFFQVMsTUFBTSxDQUFDQyxPQUFPLEdBQUdmLG1CQUFtQiJ9","map":{"version":3,"names":["Page","require","RecentlyPlayedStore","constructor","capacity","store","addSong","user","song","songIndex","indexOf","splice","length","shift","push","getRecentlyPlayed","module","exports"],"sourceRoot":"/Users/smitapatil/Documents/Project/DEMO-TEST/test/pageobjects/","sources":["demo.page.js"],"sourcesContent":["const Page = require('./page');\n\nclass RecentlyPlayedStore {\n    constructor(capacity) {\n        this.capacity = capacity;\n        this.store = {};\n    }\n\n    addSong(user, song) {\n        if (!this.store[user]) {\n            this.store[user] = [];\n        }\n\n        const songIndex = this.store[user].indexOf(song);\n        if (songIndex !== -1) {\n            this.store[user].splice(songIndex, 1);\n        }\n\n        if (this.store[user].length === this.capacity) {\n            this.store[user].shift();\n        }\n\n        this.store[user].push(song);\n    }\n\n    getRecentlyPlayed(user) {\n        return this.store[user] || [];\n    }\n}\n\nmodule.exports = RecentlyPlayedStore;"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE9B,MAAMC,mBAAmB,CAAC;EACtBC,WAAWA,CAACC,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;EACnB;EAEAC,OAAOA,CAACC,IAAI,EAAEC,IAAI,EAAE;IAChB,IAAI,CAAC,IAAI,CAACH,KAAK,CAACE,IAAI,CAAC,EAAE;MACnB,IAAI,CAACF,KAAK,CAACE,IAAI,CAAC,GAAG,EAAE;IACzB;IAEA,MAAME,SAAS,GAAG,IAAI,CAACJ,KAAK,CAACE,IAAI,CAAC,CAACG,OAAO,CAACF,IAAI,CAAC;IAChD,IAAIC,SAAS,KAAK,CAAC,CAAC,EAAE;MAClB,IAAI,CAACJ,KAAK,CAACE,IAAI,CAAC,CAACI,MAAM,CAACF,SAAS,EAAE,CAAC,CAAC;IACzC;IAEA,IAAI,IAAI,CAACJ,KAAK,CAACE,IAAI,CAAC,CAACK,MAAM,KAAK,IAAI,CAACR,QAAQ,EAAE;MAC3C,IAAI,CAACC,KAAK,CAACE,IAAI,CAAC,CAACM,KAAK,EAAE;IAC5B;IAEA,IAAI,CAACR,KAAK,CAACE,IAAI,CAAC,CAACO,IAAI,CAACN,IAAI,CAAC;EAC/B;EAEAO,iBAAiBA,CAACR,IAAI,EAAE;IACpB,OAAO,IAAI,CAACF,KAAK,CAACE,IAAI,CAAC,IAAI,EAAE;EACjC;AACJ;AAEAS,MAAM,CAACC,OAAO,GAAGf,mBAAmB"}},"mtime":1721846580281},"{\"assumptions\":{},\"sourceRoot\":\"/Users/smitapatil/Documents/Project/DEMO-TEST/test/pageobjects/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/smitapatil/Documents/Project/DEMO-TEST\",\"filename\":\"/Users/smitapatil/Documents/Project/DEMO-TEST/test/pageobjects/page.js\",\"targets\":{\"android\":\"4.4.3\",\"chrome\":\"103.0.0\",\"edge\":\"110.0.0\",\"firefox\":\"110.0.0\",\"ios\":\"12.2.0\",\"opera\":\"95.0.0\",\"safari\":\"14.1.0\",\"samsung\":\"19.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/smitapatil/Documents/Project/DEMO-TEST\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:test":{"value":{"code":"const {\n  browser\n} = require('@wdio/globals');\n\n/**\n* main page object containing all methods, selectors and functionality\n* that is shared across all page objects\n*/\nmodule.exports = class Page {\n  /**\n  * Opens a sub page of the page\n  * @param path path of the sub page (e.g. /path/to/page.html)\n  */\n  open(path) {\n    return browser.url(`https://the-internet.herokuapp.com/${path}`);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJicm93c2VyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJQYWdlIiwib3BlbiIsInBhdGgiLCJ1cmwiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9zbWl0YXBhdGlsL0RvY3VtZW50cy9Qcm9qZWN0L0RFTU8tVEVTVC90ZXN0L3BhZ2VvYmplY3RzLyIsInNvdXJjZXMiOlsicGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGJyb3dzZXIgfSA9IHJlcXVpcmUoJ0B3ZGlvL2dsb2JhbHMnKVxuXG4vKipcbiogbWFpbiBwYWdlIG9iamVjdCBjb250YWluaW5nIGFsbCBtZXRob2RzLCBzZWxlY3RvcnMgYW5kIGZ1bmN0aW9uYWxpdHlcbiogdGhhdCBpcyBzaGFyZWQgYWNyb3NzIGFsbCBwYWdlIG9iamVjdHNcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGNsYXNzIFBhZ2Uge1xuICAgIC8qKlxuICAgICogT3BlbnMgYSBzdWIgcGFnZSBvZiB0aGUgcGFnZVxuICAgICogQHBhcmFtIHBhdGggcGF0aCBvZiB0aGUgc3ViIHBhZ2UgKGUuZy4gL3BhdGgvdG8vcGFnZS5odG1sKVxuICAgICovXG4gICAgb3BlbiAocGF0aCkge1xuICAgICAgICByZXR1cm4gYnJvd3Nlci51cmwoYGh0dHBzOi8vdGhlLWludGVybmV0Lmhlcm9rdWFwcC5jb20vJHtwYXRofWApXG4gICAgfVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQVEsQ0FBQyxHQUFHQyxPQUFPLENBQUMsZUFBZSxDQUFDOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBQyxNQUFNLENBQUNDLE9BQU8sR0FBRyxNQUFNQyxJQUFJLENBQUM7RUFDeEI7QUFDSjtBQUNBO0FBQ0E7RUFDSUMsSUFBSUEsQ0FBRUMsSUFBSSxFQUFFO0lBQ1IsT0FBT04sT0FBTyxDQUFDTyxHQUFHLENBQUUsc0NBQXFDRCxJQUFLLEVBQUMsQ0FBQztFQUNwRTtBQUNKLENBQUMifQ==","map":{"version":3,"names":["browser","require","module","exports","Page","open","path","url"],"sourceRoot":"/Users/smitapatil/Documents/Project/DEMO-TEST/test/pageobjects/","sources":["page.js"],"sourcesContent":["const { browser } = require('@wdio/globals')\n\n/**\n* main page object containing all methods, selectors and functionality\n* that is shared across all page objects\n*/\nmodule.exports = class Page {\n    /**\n    * Opens a sub page of the page\n    * @param path path of the sub page (e.g. /path/to/page.html)\n    */\n    open (path) {\n        return browser.url(`https://the-internet.herokuapp.com/${path}`)\n    }\n}\n"],"mappings":"AAAA,MAAM;EAAEA;AAAQ,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE5C;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,MAAMC,IAAI,CAAC;EACxB;AACJ;AACA;AACA;EACIC,IAAIA,CAAEC,IAAI,EAAE;IACR,OAAON,OAAO,CAACO,GAAG,CAAE,sCAAqCD,IAAK,EAAC,CAAC;EACpE;AACJ,CAAC"}},"mtime":1721844819149},"{\"assumptions\":{},\"sourceRoot\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo\",\"filename\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo/wdio.conf.js\",\"targets\":{\"android\":\"4.4.3\",\"chrome\":\"103.0.0\",\"edge\":\"110.0.0\",\"firefox\":\"110.0.0\",\"ios\":\"12.2.0\",\"opera\":\"95.0.0\",\"safari\":\"14.1.0\",\"samsung\":\"19.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // The path of the spec files will be resolved relative from the directory of\n  // of the config file unless it's absolute.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    browserName: 'chrome'\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  // baseUrl: 'http://localhost:8080',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialize specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context, hookName) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n  /**\n  * Hook that gets executed before a WebdriverIO assertion happens.\n  * @param {object} params information about the assertion to be executed\n  */\n  // beforeAssertion: function(params) {\n  // }\n  /**\n  * Hook that gets executed after a WebdriverIO assertion happened.\n  * @param {object} params information about the assertion that was executed, including its results\n  */\n  // afterAssertion: function(params) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"/Users/smitapatil/Documents/Project/test demo/automation-demo/","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // The path of the spec files will be resolved relative from the directory of\n    // of the config file unless it's absolute.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        browserName: 'chrome'\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    // baseUrl: 'http://localhost:8080',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    \n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialize specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context, hookName) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n    /**\n    * Hook that gets executed before a WebdriverIO assertion happens.\n    * @param {object} params information about the assertion to be executed\n    */\n    // beforeAssertion: function(params) {\n    // }\n    /**\n    * Hook that gets executed after a WebdriverIO assertion happened.\n    * @param {object} params information about the assertion that was executed, including its results\n    */\n    // afterAssertion: function(params) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACXC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAEnB;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1721844819135},"{\"assumptions\":{},\"sourceRoot\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo/test/specs/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo\",\"filename\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo/test/specs/test.e2e.js\",\"targets\":{\"android\":\"4.4.3\",\"chrome\":\"103.0.0\",\"edge\":\"110.0.0\",\"firefox\":\"110.0.0\",\"ios\":\"12.2.0\",\"opera\":\"95.0.0\",\"safari\":\"14.1.0\",\"samsung\":\"19.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:test":{"value":{"code":"const assert = require('assert');\nconst RecentlyPlayedStore = require('../pageobjects/demo.page');\ndescribe('RecentlyPlayedStore', function () {\n  let store;\n  beforeEach(function () {\n    store = new RecentlyPlayedStore(3);\n  });\n  it('should add and retrieve recently played songs correctly', async () => {\n    await store.addSong('user1', 's1');\n    await store.addSong('user1', 's2');\n    await store.addSong('user1', 's3');\n    let result = await store.getRecentlyPlayed('user1');\n    console.log('Output:', result);\n    store.addSong('user1', 's4');\n    result = store.getRecentlyPlayed('user1');\n    console.log('Output:', result);\n    await store.addSong('user1', 's2');\n    result = await store.getRecentlyPlayed('user1');\n    console.log('Output:', result);\n    await store.addSong('user1', 's1');\n    result = await store.getRecentlyPlayed('user1');\n    console.log('Output:', result);\n  });\n  it('should handle multiple users', async () => {\n    await store.addSong('user1', 's1');\n    await store.addSong('user2', 's2');\n    await store.addSong('user1', 's3');\n    await store.addSong('user2', 's4');\n    let result1 = await store.getRecentlyPlayed('user1');\n    let result2 = await store.getRecentlyPlayed('user2');\n    console.log('Output for user1:', result1);\n    console.log('Output for user2:', result2);\n  });\n  it('should return an empty list if no songs have been played for a user', async () => {\n    let result = await store.getRecentlyPlayed('user1');\n    console.log('Output:', result);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiUmVjZW50bHlQbGF5ZWRTdG9yZSIsImRlc2NyaWJlIiwic3RvcmUiLCJiZWZvcmVFYWNoIiwiaXQiLCJhZGRTb25nIiwicmVzdWx0IiwiZ2V0UmVjZW50bHlQbGF5ZWQiLCJjb25zb2xlIiwibG9nIiwicmVzdWx0MSIsInJlc3VsdDIiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9zbWl0YXBhdGlsL0RvY3VtZW50cy9Qcm9qZWN0L3Rlc3QgZGVtby9hdXRvbWF0aW9uLWRlbW8vdGVzdC9zcGVjcy8iLCJzb3VyY2VzIjpbInRlc3QuZTJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuY29uc3QgUmVjZW50bHlQbGF5ZWRTdG9yZSA9IHJlcXVpcmUoJy4uL3BhZ2VvYmplY3RzL2RlbW8ucGFnZScpO1xuXG5kZXNjcmliZSgnUmVjZW50bHlQbGF5ZWRTdG9yZScsIGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgc3RvcmU7XG5cbiAgICBiZWZvcmVFYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc3RvcmUgPSBuZXcgUmVjZW50bHlQbGF5ZWRTdG9yZSgzKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgYWRkIGFuZCByZXRyaWV2ZSByZWNlbnRseSBwbGF5ZWQgc29uZ3MgY29ycmVjdGx5JywgYXN5bmMgKCk9PiB7XG4gICAgICAgIGF3YWl0IHN0b3JlLmFkZFNvbmcoJ3VzZXIxJywgJ3MxJyk7XG4gICAgICAgIGF3YWl0IHN0b3JlLmFkZFNvbmcoJ3VzZXIxJywgJ3MyJyk7XG4gICAgICAgIGF3YWl0IHN0b3JlLmFkZFNvbmcoJ3VzZXIxJywgJ3MzJyk7XG4gICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBzdG9yZS5nZXRSZWNlbnRseVBsYXllZCgndXNlcjEnKTtcbiAgICAgICAgY29uc29sZS5sb2coJ091dHB1dDonLCByZXN1bHQpO1xuXG4gICAgICAgIHN0b3JlLmFkZFNvbmcoJ3VzZXIxJywgJ3M0Jyk7XG4gICAgICAgIHJlc3VsdCA9IHN0b3JlLmdldFJlY2VudGx5UGxheWVkKCd1c2VyMScpO1xuICAgICAgICBjb25zb2xlLmxvZygnT3V0cHV0OicsIHJlc3VsdCk7XG5cbiAgICAgICAgYXdhaXQgc3RvcmUuYWRkU29uZygndXNlcjEnLCAnczInKTtcbiAgICAgICAgcmVzdWx0ID0gYXdhaXQgc3RvcmUuZ2V0UmVjZW50bHlQbGF5ZWQoJ3VzZXIxJyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdPdXRwdXQ6JywgcmVzdWx0KTtcblxuICAgICAgICBhd2FpdCBzdG9yZS5hZGRTb25nKCd1c2VyMScsICdzMScpO1xuICAgICAgICByZXN1bHQgPSBhd2FpdCBzdG9yZS5nZXRSZWNlbnRseVBsYXllZCgndXNlcjEnKTtcbiAgICAgICAgY29uc29sZS5sb2coJ091dHB1dDonLCByZXN1bHQpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBoYW5kbGUgbXVsdGlwbGUgdXNlcnMnLCBhc3luYyAoKT0+IHtcbiAgICAgICAgYXdhaXQgc3RvcmUuYWRkU29uZygndXNlcjEnLCAnczEnKTtcbiAgICAgICAgYXdhaXQgc3RvcmUuYWRkU29uZygndXNlcjInLCAnczInKTtcbiAgICAgICAgYXdhaXQgc3RvcmUuYWRkU29uZygndXNlcjEnLCAnczMnKTtcbiAgICAgICAgYXdhaXQgc3RvcmUuYWRkU29uZygndXNlcjInLCAnczQnKTtcbiAgICAgICAgbGV0IHJlc3VsdDEgPSBhd2FpdCBzdG9yZS5nZXRSZWNlbnRseVBsYXllZCgndXNlcjEnKTtcbiAgICAgICAgbGV0IHJlc3VsdDIgPSBhd2FpdCBzdG9yZS5nZXRSZWNlbnRseVBsYXllZCgndXNlcjInKTtcbiAgICAgICAgY29uc29sZS5sb2coJ091dHB1dCBmb3IgdXNlcjE6JywgcmVzdWx0MSk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdPdXRwdXQgZm9yIHVzZXIyOicsIHJlc3VsdDIpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gYW4gZW1wdHkgbGlzdCBpZiBubyBzb25ncyBoYXZlIGJlZW4gcGxheWVkIGZvciBhIHVzZXInLCBhc3luYyAoKT0+IHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IHN0b3JlLmdldFJlY2VudGx5UGxheWVkKCd1c2VyMScpO1xuICAgICAgICBjb25zb2xlLmxvZygnT3V0cHV0OicsIHJlc3VsdCk7XG4gICAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQ2hDLE1BQU1DLG1CQUFtQixHQUFHRCxPQUFPLENBQUMsMEJBQTBCLENBQUM7QUFFL0RFLFFBQVEsQ0FBQyxxQkFBcUIsRUFBRSxZQUFZO0VBQ3hDLElBQUlDLEtBQUs7RUFFVEMsVUFBVSxDQUFDLFlBQVk7SUFDbkJELEtBQUssR0FBRyxJQUFJRixtQkFBbUIsQ0FBQyxDQUFDLENBQUM7RUFDdEMsQ0FBQyxDQUFDO0VBRUZJLEVBQUUsQ0FBQyx5REFBeUQsRUFBRSxZQUFXO0lBQ3JFLE1BQU1GLEtBQUssQ0FBQ0csT0FBTyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUM7SUFDbEMsTUFBTUgsS0FBSyxDQUFDRyxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQztJQUNsQyxNQUFNSCxLQUFLLENBQUNHLE9BQU8sQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQ2xDLElBQUlDLE1BQU0sR0FBRyxNQUFNSixLQUFLLENBQUNLLGlCQUFpQixDQUFDLE9BQU8sQ0FBQztJQUNuREMsT0FBTyxDQUFDQyxHQUFHLENBQUMsU0FBUyxFQUFFSCxNQUFNLENBQUM7SUFFOUJKLEtBQUssQ0FBQ0csT0FBTyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUM7SUFDNUJDLE1BQU0sR0FBR0osS0FBSyxDQUFDSyxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7SUFDekNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFNBQVMsRUFBRUgsTUFBTSxDQUFDO0lBRTlCLE1BQU1KLEtBQUssQ0FBQ0csT0FBTyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUM7SUFDbENDLE1BQU0sR0FBRyxNQUFNSixLQUFLLENBQUNLLGlCQUFpQixDQUFDLE9BQU8sQ0FBQztJQUMvQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsU0FBUyxFQUFFSCxNQUFNLENBQUM7SUFFOUIsTUFBTUosS0FBSyxDQUFDRyxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQztJQUNsQ0MsTUFBTSxHQUFHLE1BQU1KLEtBQUssQ0FBQ0ssaUJBQWlCLENBQUMsT0FBTyxDQUFDO0lBQy9DQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxTQUFTLEVBQUVILE1BQU0sQ0FBQztFQUNsQyxDQUFDLENBQUM7RUFFRkYsRUFBRSxDQUFDLDhCQUE4QixFQUFFLFlBQVc7SUFDMUMsTUFBTUYsS0FBSyxDQUFDRyxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQztJQUNsQyxNQUFNSCxLQUFLLENBQUNHLE9BQU8sQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQ2xDLE1BQU1ILEtBQUssQ0FBQ0csT0FBTyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUM7SUFDbEMsTUFBTUgsS0FBSyxDQUFDRyxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQztJQUNsQyxJQUFJSyxPQUFPLEdBQUcsTUFBTVIsS0FBSyxDQUFDSyxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7SUFDcEQsSUFBSUksT0FBTyxHQUFHLE1BQU1ULEtBQUssQ0FBQ0ssaUJBQWlCLENBQUMsT0FBTyxDQUFDO0lBQ3BEQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRUMsT0FBTyxDQUFDO0lBQ3pDRixPQUFPLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRUUsT0FBTyxDQUFDO0VBQzdDLENBQUMsQ0FBQztFQUVGUCxFQUFFLENBQUMscUVBQXFFLEVBQUUsWUFBVztJQUNqRixJQUFJRSxNQUFNLEdBQUcsTUFBTUosS0FBSyxDQUFDSyxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7SUFDbkRDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFNBQVMsRUFBRUgsTUFBTSxDQUFDO0VBQ2xDLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["assert","require","RecentlyPlayedStore","describe","store","beforeEach","it","addSong","result","getRecentlyPlayed","console","log","result1","result2"],"sourceRoot":"/Users/smitapatil/Documents/Project/test demo/automation-demo/test/specs/","sources":["test.e2e.js"],"sourcesContent":["const assert = require('assert');\nconst RecentlyPlayedStore = require('../pageobjects/demo.page');\n\ndescribe('RecentlyPlayedStore', function () {\n    let store;\n\n    beforeEach(function () {\n        store = new RecentlyPlayedStore(3);\n    });\n\n    it('should add and retrieve recently played songs correctly', async ()=> {\n        await store.addSong('user1', 's1');\n        await store.addSong('user1', 's2');\n        await store.addSong('user1', 's3');\n        let result = await store.getRecentlyPlayed('user1');\n        console.log('Output:', result);\n\n        store.addSong('user1', 's4');\n        result = store.getRecentlyPlayed('user1');\n        console.log('Output:', result);\n\n        await store.addSong('user1', 's2');\n        result = await store.getRecentlyPlayed('user1');\n        console.log('Output:', result);\n\n        await store.addSong('user1', 's1');\n        result = await store.getRecentlyPlayed('user1');\n        console.log('Output:', result);\n    });\n\n    it('should handle multiple users', async ()=> {\n        await store.addSong('user1', 's1');\n        await store.addSong('user2', 's2');\n        await store.addSong('user1', 's3');\n        await store.addSong('user2', 's4');\n        let result1 = await store.getRecentlyPlayed('user1');\n        let result2 = await store.getRecentlyPlayed('user2');\n        console.log('Output for user1:', result1);\n        console.log('Output for user2:', result2);\n    });\n\n    it('should return an empty list if no songs have been played for a user', async ()=> {\n        let result = await store.getRecentlyPlayed('user1');\n        console.log('Output:', result);\n    });\n});\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAE/DE,QAAQ,CAAC,qBAAqB,EAAE,YAAY;EACxC,IAAIC,KAAK;EAETC,UAAU,CAAC,YAAY;IACnBD,KAAK,GAAG,IAAIF,mBAAmB,CAAC,CAAC,CAAC;EACtC,CAAC,CAAC;EAEFI,EAAE,CAAC,yDAAyD,EAAE,YAAW;IACrE,MAAMF,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,MAAMH,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,MAAMH,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,IAAIC,MAAM,GAAG,MAAMJ,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IACnDC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;IAE9BJ,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAC5BC,MAAM,GAAGJ,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IACzCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;IAE9B,MAAMJ,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClCC,MAAM,GAAG,MAAMJ,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;IAE9B,MAAMJ,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClCC,MAAM,GAAG,MAAMJ,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;EAClC,CAAC,CAAC;EAEFF,EAAE,CAAC,8BAA8B,EAAE,YAAW;IAC1C,MAAMF,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,MAAMH,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,MAAMH,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,MAAMH,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,IAAIK,OAAO,GAAG,MAAMR,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IACpD,IAAII,OAAO,GAAG,MAAMT,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IACpDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,OAAO,CAAC;IACzCF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,OAAO,CAAC;EAC7C,CAAC,CAAC;EAEFP,EAAE,CAAC,qEAAqE,EAAE,YAAW;IACjF,IAAIE,MAAM,GAAG,MAAMJ,KAAK,CAACK,iBAAiB,CAAC,OAAO,CAAC;IACnDC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;EAClC,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1721846490929},"{\"assumptions\":{},\"sourceRoot\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo/test/pageobjects/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo\",\"filename\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo/test/pageobjects/demo.page.js\",\"targets\":{\"android\":\"4.4.3\",\"chrome\":\"103.0.0\",\"edge\":\"110.0.0\",\"firefox\":\"110.0.0\",\"ios\":\"12.2.0\",\"opera\":\"95.0.0\",\"safari\":\"14.1.0\",\"samsung\":\"19.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:test":{"value":{"code":"const Page = require('./page');\nclass RecentlyPlayedStore {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.store = {};\n  }\n  addSong(user, song) {\n    if (!this.store[user]) {\n      this.store[user] = [];\n    }\n    const songIndex = this.store[user].indexOf(song);\n    if (songIndex !== -1) {\n      this.store[user].splice(songIndex, 1);\n    }\n    if (this.store[user].length === this.capacity) {\n      this.store[user].shift();\n    }\n    this.store[user].push(song);\n  }\n  getRecentlyPlayed(user) {\n    return this.store[user] || [];\n  }\n}\nmodule.exports = RecentlyPlayedStore;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQYWdlIiwicmVxdWlyZSIsIlJlY2VudGx5UGxheWVkU3RvcmUiLCJjb25zdHJ1Y3RvciIsImNhcGFjaXR5Iiwic3RvcmUiLCJhZGRTb25nIiwidXNlciIsInNvbmciLCJzb25nSW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwibGVuZ3RoIiwic2hpZnQiLCJwdXNoIiwiZ2V0UmVjZW50bHlQbGF5ZWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvc21pdGFwYXRpbC9Eb2N1bWVudHMvUHJvamVjdC90ZXN0IGRlbW8vYXV0b21hdGlvbi1kZW1vL3Rlc3QvcGFnZW9iamVjdHMvIiwic291cmNlcyI6WyJkZW1vLnBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUGFnZSA9IHJlcXVpcmUoJy4vcGFnZScpO1xuXG5jbGFzcyBSZWNlbnRseVBsYXllZFN0b3JlIHtcbiAgICBjb25zdHJ1Y3RvcihjYXBhY2l0eSkge1xuICAgICAgICB0aGlzLmNhcGFjaXR5ID0gY2FwYWNpdHk7XG4gICAgICAgIHRoaXMuc3RvcmUgPSB7fTtcbiAgICB9XG5cbiAgICBhZGRTb25nKHVzZXIsIHNvbmcpIHtcbiAgICAgICAgaWYgKCF0aGlzLnN0b3JlW3VzZXJdKSB7XG4gICAgICAgICAgICB0aGlzLnN0b3JlW3VzZXJdID0gW107XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzb25nSW5kZXggPSB0aGlzLnN0b3JlW3VzZXJdLmluZGV4T2Yoc29uZyk7XG4gICAgICAgIGlmIChzb25nSW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICB0aGlzLnN0b3JlW3VzZXJdLnNwbGljZShzb25nSW5kZXgsIDEpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuc3RvcmVbdXNlcl0ubGVuZ3RoID09PSB0aGlzLmNhcGFjaXR5KSB7XG4gICAgICAgICAgICB0aGlzLnN0b3JlW3VzZXJdLnNoaWZ0KCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnN0b3JlW3VzZXJdLnB1c2goc29uZyk7XG4gICAgfVxuXG4gICAgZ2V0UmVjZW50bHlQbGF5ZWQodXNlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5zdG9yZVt1c2VyXSB8fCBbXTtcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUmVjZW50bHlQbGF5ZWRTdG9yZTsiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUU5QixNQUFNQyxtQkFBbUIsQ0FBQztFQUN0QkMsV0FBV0EsQ0FBQ0MsUUFBUSxFQUFFO0lBQ2xCLElBQUksQ0FBQ0EsUUFBUSxHQUFHQSxRQUFRO0lBQ3hCLElBQUksQ0FBQ0MsS0FBSyxHQUFHLENBQUMsQ0FBQztFQUNuQjtFQUVBQyxPQUFPQSxDQUFDQyxJQUFJLEVBQUVDLElBQUksRUFBRTtJQUNoQixJQUFJLENBQUMsSUFBSSxDQUFDSCxLQUFLLENBQUNFLElBQUksQ0FBQyxFQUFFO01BQ25CLElBQUksQ0FBQ0YsS0FBSyxDQUFDRSxJQUFJLENBQUMsR0FBRyxFQUFFO0lBQ3pCO0lBRUEsTUFBTUUsU0FBUyxHQUFHLElBQUksQ0FBQ0osS0FBSyxDQUFDRSxJQUFJLENBQUMsQ0FBQ0csT0FBTyxDQUFDRixJQUFJLENBQUM7SUFDaEQsSUFBSUMsU0FBUyxLQUFLLENBQUMsQ0FBQyxFQUFFO01BQ2xCLElBQUksQ0FBQ0osS0FBSyxDQUFDRSxJQUFJLENBQUMsQ0FBQ0ksTUFBTSxDQUFDRixTQUFTLEVBQUUsQ0FBQyxDQUFDO0lBQ3pDO0lBRUEsSUFBSSxJQUFJLENBQUNKLEtBQUssQ0FBQ0UsSUFBSSxDQUFDLENBQUNLLE1BQU0sS0FBSyxJQUFJLENBQUNSLFFBQVEsRUFBRTtNQUMzQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0UsSUFBSSxDQUFDLENBQUNNLEtBQUssRUFBRTtJQUM1QjtJQUVBLElBQUksQ0FBQ1IsS0FBSyxDQUFDRSxJQUFJLENBQUMsQ0FBQ08sSUFBSSxDQUFDTixJQUFJLENBQUM7RUFDL0I7RUFFQU8saUJBQWlCQSxDQUFDUixJQUFJLEVBQUU7SUFDcEIsT0FBTyxJQUFJLENBQUNGLEtBQUssQ0FBQ0UsSUFBSSxDQUFDLElBQUksRUFBRTtFQUNqQztBQUNKO0FBRUFTLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHZixtQkFBbUIifQ==","map":{"version":3,"names":["Page","require","RecentlyPlayedStore","constructor","capacity","store","addSong","user","song","songIndex","indexOf","splice","length","shift","push","getRecentlyPlayed","module","exports"],"sourceRoot":"/Users/smitapatil/Documents/Project/test demo/automation-demo/test/pageobjects/","sources":["demo.page.js"],"sourcesContent":["const Page = require('./page');\n\nclass RecentlyPlayedStore {\n    constructor(capacity) {\n        this.capacity = capacity;\n        this.store = {};\n    }\n\n    addSong(user, song) {\n        if (!this.store[user]) {\n            this.store[user] = [];\n        }\n\n        const songIndex = this.store[user].indexOf(song);\n        if (songIndex !== -1) {\n            this.store[user].splice(songIndex, 1);\n        }\n\n        if (this.store[user].length === this.capacity) {\n            this.store[user].shift();\n        }\n\n        this.store[user].push(song);\n    }\n\n    getRecentlyPlayed(user) {\n        return this.store[user] || [];\n    }\n}\n\nmodule.exports = RecentlyPlayedStore;"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE9B,MAAMC,mBAAmB,CAAC;EACtBC,WAAWA,CAACC,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;EACnB;EAEAC,OAAOA,CAACC,IAAI,EAAEC,IAAI,EAAE;IAChB,IAAI,CAAC,IAAI,CAACH,KAAK,CAACE,IAAI,CAAC,EAAE;MACnB,IAAI,CAACF,KAAK,CAACE,IAAI,CAAC,GAAG,EAAE;IACzB;IAEA,MAAME,SAAS,GAAG,IAAI,CAACJ,KAAK,CAACE,IAAI,CAAC,CAACG,OAAO,CAACF,IAAI,CAAC;IAChD,IAAIC,SAAS,KAAK,CAAC,CAAC,EAAE;MAClB,IAAI,CAACJ,KAAK,CAACE,IAAI,CAAC,CAACI,MAAM,CAACF,SAAS,EAAE,CAAC,CAAC;IACzC;IAEA,IAAI,IAAI,CAACJ,KAAK,CAACE,IAAI,CAAC,CAACK,MAAM,KAAK,IAAI,CAACR,QAAQ,EAAE;MAC3C,IAAI,CAACC,KAAK,CAACE,IAAI,CAAC,CAACM,KAAK,EAAE;IAC5B;IAEA,IAAI,CAACR,KAAK,CAACE,IAAI,CAAC,CAACO,IAAI,CAACN,IAAI,CAAC;EAC/B;EAEAO,iBAAiBA,CAACR,IAAI,EAAE;IACpB,OAAO,IAAI,CAACF,KAAK,CAACE,IAAI,CAAC,IAAI,EAAE;EACjC;AACJ;AAEAS,MAAM,CAACC,OAAO,GAAGf,mBAAmB"}},"mtime":1721846580281},"{\"assumptions\":{},\"sourceRoot\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo/test/pageobjects/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo\",\"filename\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo/test/pageobjects/page.js\",\"targets\":{\"android\":\"4.4.3\",\"chrome\":\"103.0.0\",\"edge\":\"110.0.0\",\"firefox\":\"110.0.0\",\"ios\":\"12.2.0\",\"opera\":\"95.0.0\",\"safari\":\"14.1.0\",\"samsung\":\"19.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/smitapatil/Documents/Project/test demo/automation-demo\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:test":{"value":{"code":"const {\n  browser\n} = require('@wdio/globals');\n\n/**\n* main page object containing all methods, selectors and functionality\n* that is shared across all page objects\n*/\nmodule.exports = class Page {\n  /**\n  * Opens a sub page of the page\n  * @param path path of the sub page (e.g. /path/to/page.html)\n  */\n  open(path) {\n    return browser.url(`https://the-internet.herokuapp.com/${path}`);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJicm93c2VyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJQYWdlIiwib3BlbiIsInBhdGgiLCJ1cmwiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9zbWl0YXBhdGlsL0RvY3VtZW50cy9Qcm9qZWN0L3Rlc3QgZGVtby9hdXRvbWF0aW9uLWRlbW8vdGVzdC9wYWdlb2JqZWN0cy8iLCJzb3VyY2VzIjpbInBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBicm93c2VyIH0gPSByZXF1aXJlKCdAd2Rpby9nbG9iYWxzJylcblxuLyoqXG4qIG1haW4gcGFnZSBvYmplY3QgY29udGFpbmluZyBhbGwgbWV0aG9kcywgc2VsZWN0b3JzIGFuZCBmdW5jdGlvbmFsaXR5XG4qIHRoYXQgaXMgc2hhcmVkIGFjcm9zcyBhbGwgcGFnZSBvYmplY3RzXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBQYWdlIHtcbiAgICAvKipcbiAgICAqIE9wZW5zIGEgc3ViIHBhZ2Ugb2YgdGhlIHBhZ2VcbiAgICAqIEBwYXJhbSBwYXRoIHBhdGggb2YgdGhlIHN1YiBwYWdlIChlLmcuIC9wYXRoL3RvL3BhZ2UuaHRtbClcbiAgICAqL1xuICAgIG9wZW4gKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGJyb3dzZXIudXJsKGBodHRwczovL3RoZS1pbnRlcm5ldC5oZXJva3VhcHAuY29tLyR7cGF0aH1gKVxuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQTtBQUFRLENBQUMsR0FBR0MsT0FBTyxDQUFDLGVBQWUsQ0FBQzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsTUFBTUMsSUFBSSxDQUFDO0VBQ3hCO0FBQ0o7QUFDQTtBQUNBO0VBQ0lDLElBQUlBLENBQUVDLElBQUksRUFBRTtJQUNSLE9BQU9OLE9BQU8sQ0FBQ08sR0FBRyxDQUFFLHNDQUFxQ0QsSUFBSyxFQUFDLENBQUM7RUFDcEU7QUFDSixDQUFDIn0=","map":{"version":3,"names":["browser","require","module","exports","Page","open","path","url"],"sourceRoot":"/Users/smitapatil/Documents/Project/test demo/automation-demo/test/pageobjects/","sources":["page.js"],"sourcesContent":["const { browser } = require('@wdio/globals')\n\n/**\n* main page object containing all methods, selectors and functionality\n* that is shared across all page objects\n*/\nmodule.exports = class Page {\n    /**\n    * Opens a sub page of the page\n    * @param path path of the sub page (e.g. /path/to/page.html)\n    */\n    open (path) {\n        return browser.url(`https://the-internet.herokuapp.com/${path}`)\n    }\n}\n"],"mappings":"AAAA,MAAM;EAAEA;AAAQ,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE5C;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,MAAMC,IAAI,CAAC;EACxB;AACJ;AACA;AACA;EACIC,IAAIA,CAAEC,IAAI,EAAE;IACR,OAAON,OAAO,CAACO,GAAG,CAAE,sCAAqCD,IAAK,EAAC,CAAC;EACpE;AACJ,CAAC"}},"mtime":1721844819149}}